<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:KozmoTech.ZenUtility.ChecksumHasher.UI.Controls"
    xmlns:winuianimated="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="CardExpanderChevronForeground" ResourceKey="TextFillColorSecondary" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
            <StaticResource x:Key="CardExpanderChevronForeground" ResourceKey="TextFillColorSecondary" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <StaticResource x:Key="CardExpanderChevronForeground" ResourceKey="TextFillColorSecondary" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <x:Double x:Key="CardExpanderMinHeight">68</x:Double>
    <Thickness x:Key="PlainExpanderHeaderPadding">16,0</Thickness>
    <x:Double x:Key="CardExpanderChevronGlyphSize">16</x:Double>
    <x:Double x:Key="CardExpanderChevronGlyphFontSize">16</x:Double>

    <Style x:Key="CardExpanderHeaderStyle" TargetType="ToggleButton">
        <Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ExpanderHeaderBorderThickness}" />
        <Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="{StaticResource ExpanderHeaderHorizontalContentAlignment}" />
        <Setter Property="VerticalContentAlignment" Value="{StaticResource ExpanderHeaderVerticalContentAlignment}" />
        <Setter Property="Padding" Value="{StaticResource ExpanderHeaderPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        x:Name="RootGrid"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BackgroundSizing="{TemplateBinding BackgroundSizing}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Width="{TemplateBinding Width}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Padding="{TemplateBinding Padding}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ButtonBorderBrushPressed}" />
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonBackgroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="NormalOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PointerOverOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ButtonBorderBrushPressed}" />
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonBackgroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PressedOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ExpanderHeaderDisabledBorderBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                                        <Setter Target="ExpandCollapseChevron.Foreground" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ExpanderHeaderDisabledBorderBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="NormalOn" />
                                        <Setter Target="ExpandCollapseChevron.Foreground" Value="{ThemeResource ExpanderHeaderDisabledForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Foreground="{TemplateBinding Foreground}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <Border
                            Grid.Column="1"
                            BorderBrush="{ThemeResource ExpanderChevronBorderBrush}"
                            BorderThickness="{ThemeResource ExpanderChevronBorderThickness}"
                            Background="{ThemeResource ExpanderChevronBackground}"
                            CornerRadius="{ThemeResource ControlCornerRadius}"
                            Width="{ThemeResource ExpanderChevronButtonSize}"
                            Height="{ThemeResource ExpanderChevronButtonSize}"
                            Margin="{ThemeResource ExpanderChevronMargin}">

                            <AnimatedIcon
                                x:Name="ExpandCollapseChevron"
                                AnimatedIcon.State="NormalOff"
                                Foreground="{ThemeResource CardExpanderChevronForeground}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Width="{StaticResource CardExpanderChevronGlyphSize}"
                                Height="{StaticResource CardExpanderChevronGlyphSize}"
                                AutomationProperties.AccessibilityView="Raw">

                                <winuianimated:AnimatedChevronUpDownSmallVisualSource />
                                <AnimatedIcon.FallbackIconSource>
                                    <FontIconSource
                                        Glyph="{StaticResource ExpanderChevronDownGlyph}"
                                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                                        FontSize="{StaticResource CardExpanderChevronGlyphFontSize}"
                                        IsTextScaleFactorEnabled="False" />
                                </AnimatedIcon.FallbackIconSource>
                            </AnimatedIcon>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CardExpander">
        <Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}" />
        <Setter Property="Background" Value="{ThemeResource ExpanderContentBackground}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{StaticResource CardExpanderMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource ExpanderContentPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CardExpander">
                    <Grid MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandStates">
                                <VisualState x:Name="CollapseUp">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.167" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame
                                                    KeyTime="0:0:0.167"
                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}"
                                                    KeySpline="1,1,0,1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandDown">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0,0,0,1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                    <VisualState.Setters>
                                        <Setter
                                            Target="ExpanderHeader.CornerRadius"
                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandableStates">
                                <VisualState x:Name="Expandable" />
                                <VisualState x:Name="Plain">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.Visibility" Value="Collapsed" />
                                        <Setter Target="ExpanderContentClip.Visibility" Value="Collapsed" />
                                        <Setter Target="PlainExpanderHeader.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!-- Either this ToggleButton, or the next Border will be shown, depending on whether Content is null -->
                        <ToggleButton
                            x:Name="ExpanderHeader"
                            Style="{StaticResource CardExpanderHeaderStyle}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            BackgroundSizing="{TemplateBinding BackgroundSizing}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            HorizontalAlignment="Stretch"
                            MinHeight="{TemplateBinding MinHeight}"
                            AutomationProperties.AutomationId="ExpanderToggleButton" />

                        <Border
                            x:Name="PlainExpanderHeader"
                            BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
                            BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}"
                            Background="{ThemeResource ExpanderHeaderBackground}"
                            BackgroundSizing="{TemplateBinding BackgroundSizing}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            HorizontalAlignment="Stretch"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="{StaticResource PlainExpanderHeaderPadding}"
                            Visibility="Collapsed">

                            <ContentPresenter
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                Foreground="{ThemeResource ExpanderHeaderForeground}"
                                HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}"
                                VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}" />
                        </Border>

                        <!-- ClipToBounds will be applied: https://github.com/microsoft/microsoft-ui-xaml/blob/9052972906c8a0a1b6cb5d5c61b27d6d27cd7f11/dev/Expander/Expander.cpp#L69 -->
                        <Border x:Name="ExpanderContentClip" Grid.Row="1">
                            <Border
                                x:Name="ExpanderContent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{StaticResource ExpanderContentDownBorderThickness}"
                                Background="{TemplateBinding Background}"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                MinHeight="{TemplateBinding MinHeight}"
                                Padding="{TemplateBinding Padding}"
                                Visibility="Collapsed">

                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>

                                <ContentPresenter
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
